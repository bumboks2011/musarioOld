openapi: 3.0.0
info:
  description: This is a documentation for Musario.
  version: "1.0"
  title: Swagger Musario
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
tags:
  - name: auths
    description: Everything about your Songs
  - name: songs
    description: Everything about your Songs
  - name: playlists
    description: Everything about your Playlists
  - name: orders
    description: Everything about your Orders
  - name: authors
    description: Everything about Authors
  - name: genres
    description: Everything about Genres
  - name: services
    description: Everything about services
  - name: histories
    description: Everything about histories
paths:
  /auths/register:
        post:
            tags:
                - auths
            summary: register new user
            operationId: registerUser
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    description: name
                                    type: string
                                    required: true
                                email:
                                    description: name
                                    type: string
                                    required: true
                                password:
                                    description: name
                                    type: string
                                    required: true
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: You were successfully registered. Use your email and password to sign in.
                422:
                    description: Validation error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
  /auths/login:
      post:
          tags:
              - auths
          summary: login with credentials
          operationId: loginUser
          requestBody:
              content:
                  application/json:
                      schema:
                          type: object
                          properties:
                              email:
                                  description: name
                                  type: string
                                  required: true
                              password:
                                  description: name
                                  type: string
                                  required: true
          responses:
              200:
                  description: successful operation
                  content:
                      application/json:
                          schema:
                              type: object
                              properties:
                                  token_type:
                                      type: string
                                      example: Bearer
                                  token:
                                      type: string
                                  expires_at:
                                      type: string
              422:
                  description: Validation error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              401:
                  description: You cannot sign with those credentials
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
  /auths/logout:
      post:
          tags:
              - auths
          summary: logout user
          operationId: logoutUser
          responses:
              200:
                  description: successful operation
                  content:
                      application/json:
                          schema:
                              type: object
                              properties:
                                  message:
                                      type: string
                                      example: You are successfully logged out
              422:
                  description: Validation error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              403:
                  description: This action is unauthorized
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
          security:
              - bearerAuth: []
  /songs:
    get:
      tags:
        - songs
      summary: Get all songs by user
      description: Returns all songs by this user
      operationId: getSongs
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Songs"
        403:
          description: This action is unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    post:
      tags:
        - songs
      summary: Create song
      description: Create song and add to playlist by playlist_id
      operationId: createSong
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                playlist_id:
                  description: playlist id (required all types)
                  required: true
                  type: int64
                author_id:
                  description: author id (required all types)
                  required: true
                  type: int64
                genre_id:
                    description: genre id (required all types)
                    required: true
                    type: int64
                type:
                    description: download type. Available upload,uptube,url
                    type: string
                    enum:
                      - upload
                      - uptube
                      - url
                name:
                    type: string
                    description: song name (required if type 'url')
                url:
                    type: string
                    description: download song from url (required if type 'uptube' or 'url')
                music:
                    type: array
                    description: song files in array formData(music[1],music[2]) (required if type 'upload')
                    items:
                        type: string
                        format: binary
      responses:
          "200":
            description: Rollback result
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/OperationStatus"
          422:
            description: Validation error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          404:
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          403:
            description: This action is unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          default:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  "/songs/{id}":
    put:
      tags:
        - songs
      summary: Update song by id
      description: Update song information
      operationId: updateSong
      requestBody:
        content:
            application/json:
                schema:
                    type: object
                    properties:
                        name:
                            description: song name
                            type: string
                            required: true
                        author_id:
                            description: author id
                            type: integer
                        genre_id:
                            description: genre id
                            type: integer
      responses:
          "200":
              description: Rollback result
              content:
                  application/json:
                      schema:
                          $ref: "#/components/schemas/OperationStatus"
          422:
              description: Validation error
              content:
                  application/json:
                      schema:
                          $ref: '#/components/schemas/Error'
          404:
              description: Not Found
              content:
                  application/json:
                      schema:
                          $ref: '#/components/schemas/Error'
          403:
              description: This action is unauthorized
              content:
                  application/json:
                      schema:
                          $ref: '#/components/schemas/Error'
          default:
              description: Unexpected error
              content:
                  application/json:
                      schema:
                          $ref: '#/components/schemas/Error'
      security:
          -   bearerAuth: []
  /playlists:
    get:
      tags:
          - playlists
      summary: Get all playlists by user
      description: Returns all playlists by this user
      operationId: getPlaylists
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Playlists"
        403:
          description: This action is unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    post:
        tags:
            - playlists
        summary: Create playlist
        operationId: createPlaylists
        requestBody:
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            name:
                                description: name
                                type: string
                                required: true
        responses:
            200:
                description: successful operation
                content:
                    application/json:
                        schema:
                          $ref: "#/components/schemas/OperationStatus"
            403:
                description: This action is unauthorized
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Error'
            default:
                description: Unexpected error
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Error'
        security:
            - bearerAuth: []
  "/playlists/{id}":
      put:
          tags:
              - playlists
          summary: Update playlist by id
          description: Update playlist information
          operationId: updatePlaylists
          parameters:
              -   name: id
                  in: path
                  description: ID of playlist
                  required: true
                  schema:
                      type: integer
          requestBody:
              content:
                  application/json:
                      schema:
                          type: object
                          properties:
                              name:
                                  description: playlist name
                                  type: string
                                  required: true
          responses:
              "200":
                  description: Rollback result
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/OperationStatus"
              422:
                  description: Validation error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              404:
                  description: Not Found
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              403:
                  description: This action is unauthorized
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
          security:
              -   bearerAuth: []
      delete:
          tags:
              - playlists
          summary: Delete playlist by id
          description: Delete playlist. Attention if there are songs in the deleted playlist, the playlist will not be deleted and will return false.
          operationId: deletePlaylists
          parameters:
              - name: id
                in: path
                description: ID of playlist
                required: true
                schema:
                    type: integer
          responses:
              "200":
                  description: Rollback result
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/OperationStatus"
              422:
                  description: Validation error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              404:
                  description: Not Found
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              403:
                  description: This action is unauthorized
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
          security:
              -   bearerAuth: []
  /orders/{playlist_id}:
      get:
          tags:
              - orders
          summary: Get orders by playlist id
          description: Returns all orders by playlist
          operationId: getOrder
          parameters:
              -   name: playlist_id
                  in: path
                  description: ID of playlist
                  required: true
                  schema:
                      type: integer
          responses:
              200:
                  description: successful operation
                  content:
                      application/json:
                          schema:
                              type: array
                              items:
                                  $ref: "#/components/schemas/Orders"
              403:
                  description: This action is unauthorized
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              404:
                  description: Not Found
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
          security:
              - bearerAuth: []
      post:
          tags:
              - orders
          summary: Create order
          description: Create order by song id and playlist id. That is, add an existing song to the playlist.
          operationId: createOrder
          parameters:
              -   name: playlist_id
                  in: path
                  description: ID of playlist
                  required: true
                  schema:
                      type: integer
          requestBody:
              content:
                  application/json:
                      schema:
                          type: object
                          properties:
                              song:
                                  description: song id
                                  type: integer
                                  required: true
          responses:
              200:
                  description: successful operation
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/OperationStatus"
              403:
                  description: This action is unauthorized
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
          security:
              - bearerAuth: []
  /orders/{id}:
      put:
          tags:
              - orders
          summary: Update order by id
          description: Update order information
          operationId: updateOrder
          parameters:
              -   name: id
                  in: path
                  description: ID of order
                  required: true
                  schema:
                      type: integer
          requestBody:
              content:
                  application/json:
                      schema:
                          type: object
                          properties:
                              next:
                                  description: next order id(he is pos_id)
                                  type: integer
                                  required: true
          responses:
              "200":
                  description: Rollback result
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/OperationStatus"
              422:
                  description: Validation error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              404:
                  description: Not Found
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              403:
                  description: This action is unauthorized
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
          security:
              -   bearerAuth: []
      delete:
          tags:
              - orders
          summary: Delete order by id
          description: Deletes a song from the playlist. Attention if the song to be deleted after deletion is not found in other playlists, the song itself will also be deleted.
          operationId: deleteOrder
          parameters:
              - name: id
                in: path
                description: ID of order
                required: true
                schema:
                    type: integer
          responses:
              "200":
                  description: Rollback result
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/OperationStatus"
              422:
                  description: Validation error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              404:
                  description: Not Found
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              403:
                  description: This action is unauthorized
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
          security:
              -   bearerAuth: []
  /authors:
      get:
          tags:
              - authors
          summary: Get all authors
          description: Returns all authors
          operationId: getAuthors
          responses:
              200:
                  description: successful operation
                  content:
                      application/json:
                          schema:
                              type: array
                              items:
                                  $ref: "#/components/schemas/Authors"
              403:
                  description: This action is unauthorized
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
          security:
              - bearerAuth: []
      post:
          tags:
              - authors
          summary: Create author
          operationId: createAuthors
          requestBody:
              content:
                  application/json:
                      schema:
                          type: object
                          properties:
                              name:
                                  description: name
                                  type: string
                                  required: true
          responses:
              200:
                  description: successful operation
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/ReturnNumber"
              403:
                  description: This action is unauthorized
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
          security:
              - bearerAuth: []
  /genres:
      get:
          tags:
              - genres
          summary: Get all genres
          description: Returns all genres
          operationId: getGenres
          responses:
              200:
                  description: successful operation
                  content:
                      application/json:
                          schema:
                              type: array
                              items:
                                  $ref: "#/components/schemas/Genres"
              403:
                  description: This action is unauthorized
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
          security:
              - bearerAuth: []
      post:
          tags:
              - genres
          summary: Create genre
          operationId: createGenres
          requestBody:
              content:
                  application/json:
                      schema:
                          type: object
                          properties:
                              name:
                                  description: name
                                  type: string
                                  required: true
          responses:
              200:
                  description: successful operation
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/ReturnNumber"
              403:
                  description: This action is unauthorized
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
          security:
              - bearerAuth: []
  /services/cover:
      post:
          tags:
              - services
          summary: Get url image cover by song name
          operationId: getCover
          requestBody:
              content:
                  application/json:
                      schema:
                          type: object
                          properties:
                              name:
                                  description: name
                                  type: string
                                  required: true
          responses:
              200:
                  description: successful operation
                  content:
                      application/json:
                          schema:
                              type: object
                              properties:
                                  type: string
                              example: https://www.google.ru/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png
              403:
                  description: This action is unauthorized
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
          security:
              -   bearerAuth: []
  /services/genre:
      post:
          tags:
              - services
          summary: Get genre by song name
          operationId: getGenre
          requestBody:
              content:
                  application/json:
                      schema:
                          type: object
                          properties:
                              name:
                                  description: name
                                  type: string
                                  required: true
          responses:
              200:
                  description: successful operation
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/ReturnNumber"
              403:
                  description: This action is unauthorized
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
          security:
              -   bearerAuth: []
  /services/search:
      post:
          tags:
              - services
          summary: Search songs in ya music
          operationId: getSong
          requestBody:
              content:
                  application/json:
                      schema:
                          type: object
                          properties:
                              name:
                                  description: name
                                  type: string
                                  required: true
          responses:
              200:
                  description: successful operation
                  content:
                      application/json:
                          schema:
                              type: array
                              items:
                                  $ref: "#/components/schemas/SearchSongs"
              403:
                  description: This action is unauthorized
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
          security:
              -   bearerAuth: []
  /services/id:
      post:
          tags:
              - services
          summary: Get url song by ya id
          operationId: getSong
          requestBody:
              content:
                  application/json:
                      schema:
                          type: object
                          properties:
                              id:
                                  description: ya id music
                                  type: integer
                                  required: true
          responses:
              200:
                  description: successful operation
                  content:
                      application/json:
                          schema:
                              type: object
                              properties:
                                  type: string
                              example: https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3
              403:
                  description: This action is unauthorized
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
          security:
              -   bearerAuth: []
  /services/everyday:
      get:
          tags:
              - services
          summary: Get everyday recomendation playlist
          description: Returns recomendation playlist
          operationId: getEveryday
          responses:
              200:
                  description: successful operation
                  content:
                      application/json:
                          schema:
                              type: array
                              items:
                                  $ref: "#/components/schemas/SearchSongs"
              403:
                  description: This action is unauthorized
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
          security:
              - bearerAuth: []
  /histories:
      post:
          tags:
              - histories
          summary: Create record about playing music
          operationId: createHistories
          requestBody:
              content:
                  application/json:
                      schema:
                          type: object
                          properties:
                              name:
                                  description: song name
                                  type: string
                                  required: true
                              author:
                                  description: author name
                                  type: string
                                  required: true
                              inPlaylist:
                                  description: song in playlist
                                  type: boolean
                                  required: true
          responses:
              200:
                  description: successful operation
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/OperationStatus"
              403:
                  description: This action is unauthorized
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
              default:
                  description: Unexpected error
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Error'
          security:
              -   bearerAuth: []
servers:
  - url: http://188.68.98.195/api
  - url: https://188.68.98.195/api
components:
  requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/User"
      description: List of user object
      required: true
    Pet:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Pet"
        application/xml:
          schema:
            $ref: "#/components/schemas/Pet"
      description: Pet object that needs to be added to the store
      required: true
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Songs:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: AC/DC - T.N.T.
        author_id:
          type: integer
          format: int64
        genre_id:
          type: integer
          format: int64
      xml:
        name: Songs
    Orders:
        type: object
        required:
            - id
            - name
        properties:
            id:
                description: song id
                type: integer
                format: int64
            orderId:
                description: order id
                type: integer
                format: int64
            name:
                description: song name
                type: string
                example: AC/DC - T.N.T.
            author_id:
                description: author id
                type: integer
                format: int64
            author:
                description: author name
                type: string
                example: AC/DC
            genre_id:
                description: genre id
                type: integer
                format: int64
            pos_id:
                description: pointer to next order for sorting
                type: integer
                format: int64
        xml:
            name: Orders
    Authors:
        type: object
        required:
            - id
            - name
        properties:
            id:
                type: integer
                format: int64
            name:
                type: string
                example: AC/DC
        xml:
            name: Playlist
    Genres:
        type: object
        required:
            - id
            - name
        properties:
            id:
                type: integer
                format: int64
            name:
                type: string
                example: Rock
        xml:
            name: Playlist
    Playlists:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: top music
      xml:
        name: Playlist
    SearchSongs:
        type: object
        required:
            - id
            - author
            - name
            - link
        properties:
            id:
                type: integer
                format: int64
            author:
                type: string
                example: AC/DC
            name:
                type: string
                example: AC/DC - T.N.T.
            link:
                type: string
                example: null
        xml:
            name: Playlist
    OperationStatus:
      type: object
      properties:
          type: boolean
      example: true
    ReturnNumber:
        type: object
        properties:
            type: integer
        example: 1
    Error:
        type: object
        properties:
          error:
            type: object
            properties:
              code:
                type: integer
                format: int32
                enum:
                    - 500
                    - 504
                    - 503
                    - 422
                    - 404
                    - 403
                    - 401
              message:
                type: string
                enum:
                    - Internal Server Error
                    - Gateway Timeout
                    - Service Unavailable
                    - Validation error
                    - Not Found
                    - This action is unauthorized
                    - You cannot sign with those credentials
              description:
                type: string
              required:
                - code
                - message
